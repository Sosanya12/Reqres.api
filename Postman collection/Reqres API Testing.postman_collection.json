{
	"info": {
		"_postman_id": "a1dcb0c8-e550-4597-a58e-b7e3320bce14",
		"name": "Reqres API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "39478465"
	},
	"item": [
		{
			"name": "List users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Response contains data array\", () => {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data).to.be.an(\"array\");\r",
							"} );"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"page\", 2);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url }}/users?page=2",
					"host": [
						"{{base_url }}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус-код 200 при существующем пользователе\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Статус-код 404 для несуществующего пользователя\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{base_url }}/users/{{user_id}}"
			},
			"response": []
		},
		{
			"name": "List <resource>",
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{base_url }}/unknown"
			},
			"response": []
		},
		{
			"name": "Single <resource>",
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{base_url }}/unknown/{{user_id}}"
			},
			"response": []
		},
		{
			"name": "Create a user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"user_payload\"),JSON.stringify({\r",
							"    name: \"John\",\r",
							"    job: \"QA\"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Status is 201\", () => pm.response.to.have.status(201));\r",
							"pm.test (\"User created successfully\", ()=> {\r",
							"    pm.expect(jsonData).to.have.property(\"name\", \"John\");\r",
							"});\r",
							"pm.environment.set(\"userId\", jsonData.id);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"John\",\r\n    \"job\": \"QA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url }}/users"
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url }}/register"
			},
			"response": []
		},
		{
			"name": "Login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url }}/login"
			},
			"response": []
		},
		{
			"name": "Update a user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set (\"updated_user_pauload\", JSON.stringify({\r",
							"    name: \"John updated\",\r",
							"    job: \"QA Lead\"\r",
							"}));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"User updated succesfully\", () =>{\r",
							"    pm.expect(jsonData).to.have.property(\"name\", \"John updated\"),\r",
							"    pm.expect(jsonData).to.have.property(\"job\", \"QA Lead\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"John updated\",\r\n    \"job\": \"QA Lead\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url }}/users/{{user_id}}"
			},
			"response": []
		},
		{
			"name": "Update a user Copy",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url }}/users/{{user_id}}"
			},
			"response": []
		},
		{
			"name": "Delete a user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"user_id\", pm.environment.get(\"userId\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 204\", () => pm.response.to.have.status(204));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "{{base_url }}/users/{{user_id}}"
			},
			"response": []
		},
		{
			"name": "Delayed response",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url }}/users?delay =3",
					"host": [
						"{{base_url }}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "delay ",
							"value": "3"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "user_payload",
			"value": ""
		}
	]
}